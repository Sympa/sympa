<!-- $Id: help_editlist.tt2 6098 2009-08-13 08:26:28Z olivier.salaun $ -->

[% FOREACH p = param %]
  <a name="[% p.key %]"></a>
  <strong>[% p.value.title %]</strong> ([% p.key %])[%|helploc%]:[%END%]
  <dl>
    <dd>
      [% IF p.key == 'add' %]
        [%|helploc%]Privilege for adding (ADD command) a subscriber to the list[%END%]
      [% ELSIF p.key == 'anonymous_sender' %]
        [%|helploc%]To hide the sender's email address before distributing the message. It is replaced by the provided email address.[%END%]
      [% ELSIF p.key == 'archive' %]
        [%|helploc%]Privilege for reading mail archives and frequency of archiving[%END%]
      [% ELSIF p.key == 'available_user_options' %]
        [%|helploc%]The available_user_options parameter starts a paragraph to define available options for the subscribers of the list.[%END%]<br /><br />
        <ul>
          <li>reception <em>modelist</em> ([%|helploc%]Default value: reception mail,notice,digest,digestplain,summary,nomail[%END%])<br /><br />
              [%|helploc%]<em>modelist</em> is a list of modes (mail, notice, digest, digestplain, summary, nomail), separated by commas. Only these modes will be allowed for the subscribers of this list. If a subscriber has a reception mode not in the list, sympa uses the mode specified in the default_user_options paragraph.[%END%]
          </li>
        </ul>
      [% ELSIF p.key == 'bounce' %]
        [%|helploc%]This paragraph defines bounce management parameters:[%END%]<br /><br />
        <ul>
          <li>warn_rate ([%|helploc%]Default value: bounce_warn_rate robot parameter[%END%])<br /><br />
              [%|helploc%]The list owner receives a warning whenever a message is distributed and the number (percentage) of bounces exceeds this value.[%END%]<br /><br />
          </li>
          <li>halt_rate ([%|helploc%]Default value: bounce_halt_rate robot parameter[%END%])<br /><br />
              [%|helploc%]NOT USED YET. If bounce rate reaches the halt_rate, messages for the list will be halted, i.e. they are retained for subsequent moderation.[%END%]<br /><br />
           </li>
           <li>expire_bounce_task ([%|helploc%]Default value:[%END%] daily)<br /><br />
               [%|helploc%]Name of the task template used to remove old bounces. Useful for removing bounced subscriber email. If some messages are distributed without receiving new bounce messages, the subscriber's email seems to be OK again. Active if task_manager.pl is running.[%END%]
           </li>
         </ul>

      [% ELSIF p.key == 'bouncers_level1' %]
        [%|helploc%]The Bouncers_level1 paragraphs defines the automatic behavior of bounce management.<br />
	Level 1 is the lower level of bouncing users[%END%] <br /><br />

        <ul>
          <li>rate ([%|helploc%]Default value:[%END%] 45)<br /><br />
	      [%|helploc%]Each bouncing user have a score (from 0 to 100).[%END%] [%|helploc%]This parameter defines a lower limit for each category of bouncing users.For example, level 1 begins from 45 to level_2_treshold.[%END%]<br /><br />
          </li>
          <li> action ([%|helploc%]Default value:[%END%] notify_bouncers)<br /><br />
	       [%|helploc%]This parameter defines which task is automaticaly applied on level 1 bouncers.[%END%]<br /><br />
          </li>
           <li>notification  ([%|helploc%]Default value:[%END%] owner)<br /><br />
	       [%|helploc%]When automatic task is executed on level 1 bouncers, a notification email can be send to listowner or listmaster.[%END%]<br /><br />
           </li>
        </ul>    

      [% ELSIF p.key == 'bouncers_level2' %]
        [%|helploc%]The Bouncers_levelX paragraphs defines the automatic behavior of bounce management.<br />
	Level 2 is the highest level of bouncing users[%END%] <br /><br />

        <ul>
          <li>rate ([%|helploc%]Default value:[%END%] 80)<br /><br />
	      [%|helploc%]Each bouncing user have a score (from 0 to 100).[%END%] [%|helploc%]This parameter defines the score range defining each category of bouncing users.For example, level 2 is for users with a score between 80 and 100.[%END%]<br /><br />
          </li>
          <li>action ([%|helploc%]Default value:[%END%] notify_bouncers)<br /><br />
	       [%|helploc%]This parameter defines which task is automaticaly applied on level 2 bouncers.[%END%]<br /><br />
          </li>
           <li>notification ([%|helploc%]Default value:[%END%] owner)<br /><br />
	       [%|helploc%]When automatic task is executed on level 2 bouncers, a notification email can be send to listowner or listmaster.[%END%]<br /><br />
           </li>
        </ul>    
      [% ELSIF p.key == 'cookie' %]
        [%|helploc%]This parameter is a confidential item for generating authentication keys for administrative commands (ADD, DELETE, etc.). This parameter should remain concealed, even for owners. The cookie is applied to all list owners, and is only taken into account when the owner has the auth parameter.[%END%]
      [% ELSIF p.key == 'custom_header' %]
        [%|helploc%]This parameter is optional. The headers specified will be added to the headers of messages distributed via the list. As of release 1.2.2 of Sympa, it is possible to put several custom header lines in the configuration file at the same time.[%END%]
      [% ELSIF p.key == 'custom_subject' %]
        [%|helploc%]This parameter is optional. It specifies a string which is added to the subject of distributed messages (intended to help users who do not use automatic tools to sort incoming messages). This string will be surrounded by [] characters.[%END%]
      [% ELSIF p.key == 'default_user_options' %]
        [%|helploc%]The default_user_options parameter starts a paragraph to define a default profile for the subscribers of the list.[%END%]<br /><br />
        <ul>
          <li>reception notice | digest | summary | nomail | mail<br /><br />[%|helploc%]Mail reception mode.[%END%]<br /><br /></li>
          <li>visibility conceal | noconceal<br /><br />[%|helploc%]Visibility of the subscriber with the REVIEW command.[%END%]</li>
        </ul>
      [% ELSIF p.key == 'del' %]
        [%|helploc%]This parameter specifies who is authorized to use the DEL command.[%END%]
      [% ELSIF p.key == 'digest' %]
        [%|helploc%]Definition of digest mode. If this parameter is present, subscribers can select the option of receiving messages in multipart/digest MIME format, or as a plain text digest. Messages are then grouped together, and compiled messages are sent to subscribers according to the frequency selected with this parameter.[%END%]
      [% ELSIF p.key == 'editor' %]
        [%|helploc%]Editors are responsible for moderating messages. If the mailing list is moderated, messages posted to the list will first be passed to the editors, who will decide whether to distribute or reject it.[%END%] <br />
        [%|helploc%]FYI: Defining editors will not make the list moderated; you will have to set the "send" parameter.[%END%]<br />
        [%|helploc%]FYI: If the list is moderated, any editor can distribute or reject a message without the knowledge or consent of the other editors. Messages that have not been distributed or rejected will remain in the moderation spool until they are acted on.[%END%]
      [% ELSIF p.key == 'expire_task' %]
        [%|helploc%]This parameter states which model is used to create an expire task. An expire task regularly checks the subscription or resubscription  date of subscribers and asks them to renew their subscription. If they don't they are deleted.[%END%]
      [% ELSIF p.key == 'footer_type' %]
        [%|helploc%]List owners may decide to add message headers or footers to messages sent via the list. This parameter defines the way a footer/header is added to a message.[%END%]<br /><br />
        <ul>
          <li>footer_type mime<br /><br />
              [%|helploc%]The default value. Sympa will add the footer/header as a new MIME part.[%END%]<br /><br />
          </li>
          <li>footer_type append<br /><br />
              [%|helploc%]Sympa will not create new MIME parts, but will try to append the header/footer to the body of the message. Predefined message-footers will be ignored. Headers/footers may be appended to text/plain messages only.[%END%]
          </li>
        </ul>
      [% ELSIF p.key == 'host' %]
        [%|helploc%]Domain name of the list, default is the robot domain name set in the related robot.conf file or in file /etc/sympa.conf.[%END%]
      [% ELSIF p.key == 'include_file' %]
        [%|helploc%]This parameter will be interpreted only if the user_data_source value is set to include. The file should contain one e-mail address per line (lines beginning with a "#" are ignored).[%END%]
      [% ELSIF p.key == 'include_ldap_2level_query' %]
        [%|helploc%]This paragraph defines parameters for a two-level query returning a list of subscribers. Usually the first-level query returns a list of DNs and the second-level queries convert the DNs into e-mail addresses. This paragraph is used only if user_data_source is set to include. This feature requires the Net::LDAP (perlldap) PERL module.[%END%]
      [% ELSIF p.key == 'include_ldap_query' %]
        [%|helploc%]This paragraph defines parameters for a query returning a list of subscribers. This paragraph is used only if user_data_source is set to include. This feature requires the Net::LDAP (perlldap) PERL module.[%END%]
      [% ELSIF p.key == 'include_list' %]
        [%|helploc%]This parameter will be interpreted only if user_data_source is set to include. All subscribers of list listname become subscribers of the current list. You may include as many lists as required, using one include_list listname line for each included list. Any list at all may be included; the user_data_source definition of the included list is irrelevant, and you may therefore include lists which are also defined by the inclusion of other lists. Be careful, however, not to include list A in list B and then list B in list A, since this will give rise to an infinite loop.[%END%]
      [% ELSIF p.key == 'include_remote_sympa_list' %]
        [%|helploc%]Sympa can contact another Sympa service using HTTPS to fetch a remote list in order to include each member of a remote list as subscriber. You may include as many lists as required, using one include_remote_sympa_list paragraph for each included list. Be careful, however, not to give rise to an infinite loop resulting from cross includes.[%END%]<br /><br />
        [%|helploc%]For this operation, one Sympa site acts as a server while the other one acs as client. On the server side, the only setting needed is to give permission to the remote Sympa to review the list. This is controlled by the review scenario.[%END%]
      [% ELSIF p.key == 'include_sql_query' %]
        [%|helploc%]This parameter will be interpreted only if the user_data_source value is set to include, and is used to begin a paragraph defining the SQL query parameters. [%END%]
      [% ELSIF p.key == 'lang' %]
        [%|helploc%]This parameter defines the language used for the list. It is used to initialize a user's language preference; Sympa command reports are extracted from the associated message catalog.[%END%]
      [% ELSIF p.key == 'max_size' %]
        [%|helploc%]Maximum size of a message in 8-bit bytes.[%END%]
      [% ELSIF p.key == 'owner' %]
        [%|helploc%]Owners are managing subscribers of the list. They may review subscribers and add or delete email addresses from the mailing list. If you are a privileged owner of the list, you can choose other owners for the mailing list. Privileged owners may edit a few more options than other owners. [%END%]
      [% ELSIF p.key == 'priority' %]
        [%|helploc%]The priority with which Sympa will process messages for this list. This level of priority is applied while the message is going through the spool. The z priority will freeze the message in the spool.[%END%]
      [% ELSIF p.key == 'remind' %]
        [%|helploc%]This parameter specifies who is authorized to use the remind command.[%END%]
      [% ELSIF p.key == 'remind_return_path' %]
        [%|helploc%]Same as welcome_return_path, but applied to remind messages.[%END%]
      [% ELSIF p.key == 'remind_task' %]
        [%|helploc%]This parameter states which model is used to create a remind task. A remind task regularly sends  subscribers a message which reminds them of their list subscriptions.[%END%]
      [% ELSIF p.key == 'reply_to_header' %]
        [%|helploc%]The reply_to_header parameter starts a paragraph defining what Sympa will place in the Reply-To: SMTP header field of the messages it distributes.[%END%]<br /><br />
        <ul>
          <li>value sender | list | all | other_email ([%|helploc%]Default value:[%END%] sender)<br /><br />
              [%|helploc%]This parameter indicates whether the Reply-To: field should indicate the sender of the message (sender), the list itself (list), both list and sender (all) or an arbitrary e-mail address (defined by the other_email parameter).[%END%]<br /><br />
              [%|helploc%]Note: it is inadvisable to change this parameter, and particularly inadvisable to set it to list. Experience has shown it to be almost inevitable that users, mistakenly believing that they are replying only to the sender, will send private messages to a list. This can lead, at the very least, to embarrassment, and sometimes to more serious consequences.[%END%]<br /><br />
          </li>
          <li>other_email [%|helploc%]an_email_address[%END%]<br /><br />
              [%|helploc%]If value was set to other_email, this parameter defines the e-mail address used.[%END%]<br /><br />
          </li>
          <li>apply respect | forced ([%|helploc%]Default value:[%END%] respect)<br /><br />
               [%|helploc%]The default is to respect (preserve) the existing Reply-To: SMTP header field in incoming messages. If set to forced, Reply-To: SMTP header field will be overwritten.[%END%]
          </li>
        </ul>
      [% ELSIF p.key == 'review' %]
        [%|helploc%]This parameter specifies who can access the list of members. Since subscriber addresses can be abused by spammers, it is strongly recommended that you only authorize owners or subscribers to access the subscriber list. [%END%]
      [% ELSIF p.key == 'send' %]
        [%|helploc%]This parameter specifies who can send messages to the list.[%END%]<br /><br />
      [% ELSIF p.key == 'shared_doc' %]
        [%|helploc%]This paragraph defines read and edit access to the shared document repository.[%END%]
      [% ELSIF p.key == 'spam_protection' %]
        [%|helploc%]There is a need to protect Sympa web sites against spambots which collect email addresses from public web sites. Various methods are available in Sympa and you can choose to use them with the spam_protection and web_archive_spam_protection parameters. Possible value are:[%END%]<br /><br />
        <ul>
          <li>javascript: [%|helploc%]the address is hidden using a javascript. A user who enables javascript can see a nice mailto address where others have nothing.[%END%]</li>
          <li>at: [%|helploc%]the @ char is replaced by the string " AT ".[%END%]</li>
          <li>none: [%|helploc%]no protection against spammer.[%END%]</li>
        </ul>
      [% ELSIF p.key == 'subject' %]
        [%|helploc%]This parameter indicates the subject of the list, which is sent in response to the LISTS mail command. The subject is a free form text limited to one line.[%END%]
      [% ELSIF p.key == 'subscribe' %]
        [%|helploc%]The subscribe parameter defines the rules for subscribing to the list.[%END%]
      [% ELSIF p.key == 'topics' %]
        [%|helploc%]This parameter allows the classification of lists. You may define multiple topics as well as hierarchical ones. WWSympa's list of public lists uses this parameter.[%END%]
      [% ELSIF p.key == 'ttl' %]
        [%|helploc%]Sympa caches user data extracted using the include parameter. Their TTL (time-to-live) within Sympa can be controlled using this parameter. The default value is 3600[%END%]
      [% ELSIF p.key == 'unsubscribe' %]
        [%|helploc%]This parameter specifies the unsubscription method for the list. Use open_notify or auth_notify to allow owner notification of each unsubscribe command.[%END%]
      [% ELSIF p.key == 'user_data_source' %]
        [%|helploc%]Sympa allows the list owner to choose how Sympa loads list member data. Subscriber information can be stored in a text file or relational database, or included from various external sources (list, flat file, result of or query).[%END%]
      [% ELSIF p.key == 'visibility' %]
        [%|helploc%]This parameter indicates whether the list should feature in the output generated in response to a LISTS command or should be shown in the list overview of the web-interface.[%END%]
      [% ELSIF p.key == 'web_archive' %]
        [%|helploc%]Defines who can access the web archive for the list.[%END%]
      [% ELSIF p.key == 'web_archive_spam_protection' %]
        [%|helploc%]Idem spam_protection is provided but it can be used only for web archives. Access requires a cookie, and users must submit a small form in order to receive a cookie before browsing the archives. This blocks all robot, even google and co.[%END%]
      [% ELSIF p.key == 'welcome_return_path' %]
        [%|helploc%]If set to unique, the welcome message is sent using a unique return path in order to remove the subscriber immediately in the case of a bounce.[%END%]
      [% ELSIF p.key == 'msg_topic' %]
        [%|helploc%]This paragraph defines a topic used to tag a message of a list, named by msg_topic.name ("other" is a reserved word), its title is msg_topic.title. The msg_topic.keywords entry is optional and allows automatic tagging. This should be a list of keywords, separated by ','.[%END%]
      [% ELSIF p.key == 'msg_topic_keywords_apply_on' %]
        [%|helploc%]This parameter indicates which part of the message is used to perform automatic tagging.[%END%]
      [% ELSIF p.key == 'msg_topic_tagging' %]
        [%|helploc%]This parameter indicates if the tagging is optional or required for a list.[%END%]
      [% ELSE %]
        [%|helploc%]No Comment[%END%]
      [% END %]
    </dd>
  </dl>
[% END %]
<!-- end help_editlist.tt2 -->
